[{"C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\App.jsx":"1","C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Produto.jsx":"2","C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Sacola.jsx":"3","C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\SacolaLinha.jsx":"4","C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Produtos.jsx":"5","C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Contatos.jsx":"6"},{"size":201,"mtime":1611599204551,"results":"7","hashOfConfig":"8"},{"size":4130,"mtime":1611696581068,"results":"9","hashOfConfig":"8"},{"size":2459,"mtime":1611696598352,"results":"10","hashOfConfig":"8"},{"size":753,"mtime":1611599204558,"results":"11","hashOfConfig":"8"},{"size":6135,"mtime":1611698174860,"results":"12","hashOfConfig":"8"},{"size":4330,"mtime":1611715845388,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"174f8oh",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\App.jsx",[],"C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Produto.jsx",["27"],"C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Sacola.jsx",["28","29"],"C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\SacolaLinha.jsx",[],"C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Produtos.jsx",["30"],"import React from \"react\";\r\nimport {Link } from 'react-router-dom';\r\n\r\nconst Produtos = () =>{\r\n    const [produtos,setProdutos] = React.useState([]);\r\n    const [filtroId,setFiltro] = React.useState('0');\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData() {\r\n            const url = \"http://localhost/Storm-Eletro/backend/\";\r\n            const response = await fetch(url);\r\n            setProdutos(await response.json());\r\n        } fetchData();\r\n    }, [])\r\n\r\n    const categoriasPoluidas = produtos.map(categoria => {\r\n        const obj = { };\r\n        obj.cat_id = categoria.cat_id; \r\n        obj.categoria = categoria.categoria; \r\n        return obj;\r\n    });\r\n\r\n    const categorias = [...new Set(categoriasPoluidas.map(JSON.stringify))].map(JSON.parse);\r\n\r\n    function shadow(event) {\r\n        const img = event.target;\r\n        if (img.classList[7] === \"border-0\" && img.classList[8] !== \"shadow-lg\") {\r\n            img.classList.toggle('shadow-lg',true);\r\n        } else if (img.parentElement.classList[7] === \"border-0\" && img.parentElement.classList[8] !== \"shadow-lg\") {\r\n            img.parentElement.classList.toggle('shadow-lg',true);\r\n        } else if (img.parentElement.parentElement.classList[7] === \"border-0\" && img.parentElement.parentElement.classList[8] !== \"shadow-lg\") {\r\n            img.parentElement.parentElement.classList.toggle('shadow-lg',true);\r\n        }\r\n    }\r\n\r\n    function shadowless(event) {\r\n        const img = event.target;\r\n        if (img.classList[8] === \"shadow-lg\") {\r\n            img.classList.toggle('shadow-lg',false);\r\n        } else if (img.parentElement.classList[8] === \"shadow-lg\") {\r\n            img.parentElement.classList.toggle('shadow-lg',false);\r\n        } else if (img.parentElement.parentElement.classList[8] === \"shadow-lg\") {\r\n            img.parentElement.parentElement.classList.toggle('shadow-lg',false);\r\n        } \r\n         \r\n    }\r\n\r\n    function totalProdutos(cat_id){\r\n        let count = 0;\r\n        for (const i of produtos) {\r\n            if(i.cat_id === cat_id) {\r\n                ++count;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    function filtro(event){\r\n        let lista = event.target.id;\r\n        setFiltro(lista);\r\n    }\r\n\r\n    return(\r\n        <main className=\"container-fluid\">\r\n            <h2>Produtos</h2>\r\n            <hr/>\r\n            <div className=\"d-flex\">\r\n                <aside className=\"categorias\">\r\n                    <h3>Categorias</h3>\r\n                    <ul className=\"list-group ml-2\">\r\n                        <li id={0} className=\"list-item list-group-item-action d-flex justify-content-between align-items-center\" onClick={filtro}>\r\n                            Todos\r\n                            <span className=\"badge badge-primary badge-pill\">{produtos.length}</span>\r\n                        </li>\r\n                        {categorias.map((categoria) => {\r\n                            return(\r\n                                <li key={categoria.cat_id} id={categoria.cat_id} className=\"list-item list-group-item-action d-flex justify-content-between align-items-center\" onClick={filtro}>\r\n                                    {categoria.categoria}\r\n                                    <span className=\"badge badge-primary badge-pill\">{totalProdutos(categoria.cat_id)}</span>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </aside>\r\n                <div className=\"container row mx-auto\">\r\n                    {produtos.map((produto) => {\r\n                        let img;\r\n                        if (produto.img.indexOf('http') !== -1) {\r\n                            img = produto.img;\r\n                        } else {\r\n                            img = \"/img/produtos/\" + produto.img;\r\n                        }\r\n                        if (filtroId === '0') {\r\n                            return(\r\n                                <Link key={produto.id} className={produto.cat_id + \" col-sm-12 col-lg-4 card align-items-center p-5 t-none border-0\"} to={() => \"/Produto/\" + produto.descricao} onMouseEnter={shadow} onMouseLeave={shadowless}>\r\n                                    <div className=\"card-img-top div-height vh-100 d-flex align-items-center\"> <img className=\"h-75 mx-auto\" src={img} alt={produto.categoria}/></div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\"> {produto.descricao} </p>\r\n                                        <del className=\"card-title\">R$ {produto.preco_antigo}</del>\r\n                                        <p className=\"card-title preçoAtual text-danger font-weight-bold text-monospace\">R$ {produto.preco}</p>\r\n                                    </div>\r\n                                </Link>\r\n                            )\r\n                        } else if(produto.cat_id.toString() === filtroId){\r\n                            return(\r\n                                <Link key={produto.id} className={produto.cat_id + \" col-sm-12 col-lg-4 card align-items-center p-5 t-none border-0\"} to={() => \"/Produto/\" + produto.descricao} onMouseEnter={shadow} onMouseLeave={shadowless}>\r\n                                    <div className=\"card-img-top div-height vh-100 d-flex align-items-center\"> <img className=\"h-75 mx-auto\" src={img} alt={produto.categoria}/></div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\"> {produto.descricao} </p>\r\n                                        <del className=\"card-title\">R$ {produto.preco_antigo}</del>\r\n                                        <p className=\"card-title preçoAtual text-danger font-weight-bold text-monospace\">R$ {produto.preco}</p>\r\n                                    </div>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>                    \r\n            </div>       \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Produtos;","C:\\Users\\Lucas\\Desktop\\projetos\\storm_eletro\\frontend\\src\\Components\\Contatos.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":46,"column":32,"nodeType":"33","messageId":"34","endLine":46,"endColumn":34},{"ruleId":"35","severity":1,"message":"36","line":3,"column":9,"nodeType":"37","messageId":"38","endLine":3,"endColumn":13},{"ruleId":"31","severity":1,"message":"39","line":35,"column":38,"nodeType":"33","messageId":"40","endLine":35,"endColumn":40},{"ruleId":"31","severity":1,"message":"39","line":86,"column":45,"nodeType":"33","messageId":"40","endLine":86,"endColumn":47},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd"]